virtctl image-upload -n openshift-virtualization-os-images pvc rhel7-3-image --size=30Gi --image-path=./rhel-guest-image-7.3-35.x86_64.qcow2 --insecure

virtctl image-upload -n openshift-virtualization-os-images pvc rhel9-2-image --size=30Gi --image-path=./rhel-9.2-x86_64-kvm.qcow2 --insecure

virtctl image-upload -n openshift-virtualization-os-images pvc win2019-image --size=6Gi --image-path=./Windows2019.iso --insecure

oc process -n test-ov -f /root/test/yaml/win.yaml | oc apply -f - -n test-ov
oc process -n test-ov -f /root/rhel7.yaml | oc apply -f - -n test-ov
oc process -n test-ov -f /root/rhel9.yaml | oc apply -f - -n test-ov

htpasswd -c -B -b ./htpasswd admin redhat1!

oc create secret generic htpass-secret --from-file=htpasswd=./htpasswd -n openshift-config

    ```bash
    cat <<EOF >passwd.yaml
    apiVersion: config.openshift.io/v1
    kind: OAuth
    metadata:
      name: cluster
    spec:
      identityProviders:
      - name: ocp4-htpasswd
        mappingMethod: claim 
        type: HTPasswd
        htpasswd:
          fileData:
            name: htpass-secret
    EOF

oc apply -f passwd.yaml

admin 계정에 cluste-admin 권한 부여
oc adm policy add-cluster-role-to-user cluster-admin admin





apiVersion: nmstate.io/v1
kind: NodeNetworkConfigurationPolicy
metadata:
  name: ovs-br1-multiple-networks
spec:
  nodeSelector:
    node-role.kubernetes.io/worker: ''
  desiredState:
    interfaces:
    - name: ovs-br1
      description: |-
        A dedicated OVS bridge with eth1 as a port
        allowing all VLANs and untagged traffic
      type: ovs-bridge
      state: up
      bridge:
        options:
          stp: true
        port:
        - name: eth1 <<<<<<<< 실제 추가된 물리 Interface 명
    ovn:
      bridge-mappings:
      - localnet: localnet2
        bridge: ovs-br1
        state: present



apiVersion: k8s.cni.cncf.io/v1
kind: NetworkAttachmentDefinition
metadata:
  name: localnet2
  namespace: namespace <<<NAMESPACE
spec:
  config: |2
    {
            "cniVersion": "0.3.1",
            "name": "localnet2",
            "type": "ovn-k8s-cni-overlay",
            "topology":"localnet",
            "netAttachDefName": "namespace/localnet2" 
    }



python3 -m http.server 8080
